"Swift highlight
set runtimepath+=~/.vim/bundle/swift.vim

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

""""""""""""""""""most important"""""""""""""""""
" let Vundle manage Vundle
Bundle 'gmarik/vundle'

Bundle 'kien/ctrlp.vim'
Bundle 'vim-airline/vim-airline'

Bundle "majutsushi/tagbar"
nmap <F12> :TagbarToggle<cr>

Bundle "scrooloose/nerdtree"
nmap <F1> :NERDTreeToggle<cr>

Bundle "jiangmiao/auto-pairs"

"search
Bundle 'mileszs/ack.vim'
if executable('ag')
      let g:ackprg = 'ag --vimgrep'
  endif
map <c-F> :Ack<space>

" add commenter
Bundle 'scrooloose/nerdcommenter'
let g:NERDSpaceDelims=1
map <leader>/ <leader>c<space>

"""""""""""""""""""""""""""""""""""""""""""""""""

"""""""""""""""""""Swift""""""""""""""""""""""
Bundle "keith/swift.vim"
""""""""""""""""""""""""""""""""""""""""""""""

"""""""""""""""""""Python like IDE""""""""""""""
Bundle "klen/python-mode"
"Support Python version 2.6+ and 3.2+
"Syntax highlighting
"Virtualenv support
"Run python code (<leader>r)
"Add/remove breakpoints (<leader>b)
"Improved Python indentation
"Python folding
"Python motions and operators (]], 3[[, ]]M, vaC, viM, daC, ciM, ...)
"Code checking (pylint, pyflakes, pylama, ...) that can be run simultaneously (:PymodeLint)
"Autofix PEP8 errors (:PymodeLintAuto)
"Search in python documentation (K)
"Code refactoring <rope refactoring library> (rope)
"Strong code completion (rope)
"Go to definition (<C-c>g for :RopeGotoDefinition)
let g:pymode = 1
let g:pymode_virtualenv = 1
let g:pymode_rope = 0
let g:pymode_rope_autoimport = 0
"let g:pymode_trim_whitespaces = 1
"let g:pymode_options = 1
"let g:pymode_python = 'python'
"let g:pymode_indent = 1
"let g:pymode_folding = 1
"let g:pymode_doc = 1
"let g:pymode_doc_bind = 'K'
"let g:pymode_virtualenv = 1
"let g:pymode_virtualenv_path = $VIRTUAL_ENV
let g:pymode_run = 1
let g:pymode_run_bind = '<leader>r'
"""""""""""""""""""""""""""""""""""""""""""""""

"""""""""""Complete & Syntastic"""""""""""""""""
Bundle "Valloric/YouCompleteMe"
let g:ycm_register_as_syntastic_checker = 1 "default 1
let g:Show_diagnostics_ui = 1 "default 1
""will put icons in Vim's gutter on lines that have a diagnostic set.
"Turning this off will also turn off the YcmErrorLine and YcmWarningLine
""highlighting
let g:ycm_enable_diagnostic_signs = 1
let g:ycm_enable_diagnostic_highlighting = 0
let g:ycm_always_populate_location_list = 1 "default 0
let g:ycm_open_loclist_on_ycm_diags = 1 "default 1

let g:ycm_complete_in_strings = 1 "default 1
let g:ycm_collect_identifiers_from_tags_files = 0 "default 0
let g:ycm_path_to_python_interpreter = '' "default ''

let g:ycm_server_use_vim_stdout = 0 "default 0 (logging to console)
let g:ycm_server_log_level = 'info' "default info

let g:ycm_global_ycm_extra_conf = '~/.ycm_extra_conf.py'  "where to search for .ycm_extra_conf.py if not found
let g:ycm_confirm_extra_conf = 1

let g:ycm_goto_buffer_command = 'same-buffer' "[ 'same-buffer', 'horizontal-split', 'vertical-split', 'new-tab'  ]
let g:ycm_filetype_whitelist = { '*': 1  }
let g:ycm_key_invoke_completion = '<C-Space>'
let g:ycm_error_symbol = '>>'
let g:ycm_warning_symbol = '>*'
nnoremap <leader>gl :YcmCompleter GoToDeclaration<CR>
nnoremap <leader>gf :YcmCompleter GoToDefinition<CR>
nnoremap <leader>] :YcmCompleter GoToDefinitionElseDeclaration<CR>
nnoremap <c-]> :YcmCompleter GoToDefinitionElseDeclaration<CR>
nmap <F4> :YcmDiags<CR>
nnoremap <F11> :YcmForceCompileAndDiagnostics <CR>
"""""""""""""""""""""""""""""""""""""""""""

"""""""""""""""""""scheme""""""""""""""""""
Bundle "tomasr/molokai"
"""""""""""""""""""""""""""""""""""""""""""

"""""""""""""""""""""FE""""""""""""""""""""
Bundle 'chemzqm/wxapp.vim'
Bundle 'othree/xml.vim'

"for check javascript syntastic
"need node.js and JSHint
"npm install -g jshint
"note: jshint doesn`t support JSX,use ESlint to replace it.
" Bundle 'Shutnik/jshint2.vim'
" map <c-A> :JSHint<CR>
"let jshint2_save = 1
"""""""""""""""""""""""""""""""""""""""""""
